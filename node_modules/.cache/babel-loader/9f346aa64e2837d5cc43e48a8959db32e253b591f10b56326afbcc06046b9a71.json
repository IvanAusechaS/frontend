{"ast":null,"code":"// frontend/src/services/api.js\nimport axios from 'axios';\nconst API_URL = 'http://127.0.0.1:8000/api/';\n\n// Configura una instancia de axios con headers por defecto\nconst api = axios.create({\n  baseURL: API_URL\n});\n\n// Función para renovar el token\nconst refreshAccessToken = async () => {\n  const refreshToken = localStorage.getItem('refreshToken');\n  if (!refreshToken) {\n    throw new Error('No refresh token available');\n  }\n  try {\n    const response = await axios.post(`${API_URL}token/refresh/`, {\n      refresh: refreshToken\n    });\n    const {\n      access\n    } = response.data;\n    localStorage.setItem('token', access);\n    return access;\n  } catch (error) {\n    console.error('Error renovando token:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\n\n// Interceptor para añadir el token a cada solicitud\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  console.log('Token enviado en interceptor:', token);\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  } else {\n    console.warn('No hay token en localStorage');\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Interceptor para manejar errores 401 y renovar el token\napi.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  const originalRequest = error.config;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      const newToken = await refreshAccessToken();\n      originalRequest.headers['Authorization'] = `Bearer ${newToken}`;\n      return api(originalRequest);\n    } catch (refreshError) {\n      localStorage.clear();\n      window.location.href = '/login';\n      return Promise.reject(refreshError);\n    }\n  }\n  return Promise.reject(error);\n});\n\n// Funciones que usan el interceptor\nexport const getPuntosAtencion = async () => {\n  try {\n    const response = await api.get('puntos-atencion/');\n    console.log('Respuesta de puntos-atencion:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error en getPuntosAtencion:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const createTurno = async turnoData => {\n  try {\n    const response = await api.post('turnos/', turnoData);\n    console.log('Turno creado:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error en createTurno:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const getTurnos = async () => {\n  try {\n    const response = await api.get('turnos/');\n    console.log('Turnos obtenidos:', response.data);\n    return response.data; // Asegura que siempre devuelva response.data\n  } catch (error) {\n    console.error('Error en getTurnos:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const cancelTurno = async turnoId => {\n  try {\n    const response = await api.patch(`turnos/${turnoId}/`, {\n      estado: 'Cancelado'\n    });\n    console.log('Turno cancelado:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error en cancelTurno:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const loginUser = async (cedula, password) => {\n  try {\n    const response = await api.post('login/', {\n      cedula,\n      password\n    });\n    console.log('Respuesta de login:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error en loginUser:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const logoutUser = async () => {\n  console.log('Cerrando sesión solo en el frontend');\n  return Promise.resolve({\n    message: 'Sesión cerrada'\n  });\n};\nexport const registerUser = async userData => {\n  try {\n    const response = await api.post('register/', userData);\n    console.log('Respuesta de register:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error en registerUser:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\n\n// Exporta la instancia api como exportación por defecto\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","refreshAccessToken","refreshToken","localStorage","getItem","Error","response","post","refresh","access","data","setItem","error","console","message","interceptors","request","use","config","token","log","headers","warn","Promise","reject","_error$response","originalRequest","status","_retry","newToken","refreshError","clear","window","location","href","getPuntosAtencion","get","createTurno","turnoData","getTurnos","cancelTurno","turnoId","patch","estado","loginUser","cedula","password","logoutUser","resolve","registerUser","userData"],"sources":["C:/Users/ivana/.vscode/Proyecto DSI/frontend/src/services/api.js"],"sourcesContent":["// frontend/src/services/api.js\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://127.0.0.1:8000/api/';\r\n\r\n// Configura una instancia de axios con headers por defecto\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n});\r\n\r\n// Función para renovar el token\r\nconst refreshAccessToken = async () => {\r\n  const refreshToken = localStorage.getItem('refreshToken');\r\n  if (!refreshToken) {\r\n    throw new Error('No refresh token available');\r\n  }\r\n  try {\r\n    const response = await axios.post(`${API_URL}token/refresh/`, { refresh: refreshToken });\r\n    const { access } = response.data;\r\n    localStorage.setItem('token', access);\r\n    return access;\r\n  } catch (error) {\r\n    console.error('Error renovando token:', error.response ? error.response.data : error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Interceptor para añadir el token a cada solicitud\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    console.log('Token enviado en interceptor:', token);\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    } else {\r\n      console.warn('No hay token en localStorage');\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// Interceptor para manejar errores 401 y renovar el token\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n    if (error.response?.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n      try {\r\n        const newToken = await refreshAccessToken();\r\n        originalRequest.headers['Authorization'] = `Bearer ${newToken}`;\r\n        return api(originalRequest);\r\n      } catch (refreshError) {\r\n        localStorage.clear();\r\n        window.location.href = '/login';\r\n        return Promise.reject(refreshError);\r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Funciones que usan el interceptor\r\nexport const getPuntosAtencion = async () => {\r\n  try {\r\n    const response = await api.get('puntos-atencion/');\r\n    console.log('Respuesta de puntos-atencion:', response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error en getPuntosAtencion:', error.response ? error.response.data : error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createTurno = async (turnoData) => {\r\n  try {\r\n    const response = await api.post('turnos/', turnoData);\r\n    console.log('Turno creado:', response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error en createTurno:', error.response ? error.response.data : error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getTurnos = async () => {\r\n  try {\r\n    const response = await api.get('turnos/');\r\n    console.log('Turnos obtenidos:', response.data);\r\n    return response.data; // Asegura que siempre devuelva response.data\r\n  } catch (error) {\r\n    console.error('Error en getTurnos:', error.response ? error.response.data : error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const cancelTurno = async (turnoId) => {\r\n  try {\r\n    const response = await api.patch(`turnos/${turnoId}/`, { estado: 'Cancelado' });\r\n    console.log('Turno cancelado:', response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error en cancelTurno:', error.response ? error.response.data : error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const loginUser = async (cedula, password) => {\r\n  try {\r\n    const response = await api.post('login/', { cedula, password });\r\n    console.log('Respuesta de login:', response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error en loginUser:', error.response ? error.response.data : error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const logoutUser = async () => {\r\n  console.log('Cerrando sesión solo en el frontend');\r\n  return Promise.resolve({ message: 'Sesión cerrada' });\r\n};\r\n\r\nexport const registerUser = async (userData) => {\r\n  try {\r\n    const response = await api.post('register/', userData);\r\n    console.log('Respuesta de register:', response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error en registerUser:', error.response ? error.response.data : error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Exporta la instancia api como exportación por defecto\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}