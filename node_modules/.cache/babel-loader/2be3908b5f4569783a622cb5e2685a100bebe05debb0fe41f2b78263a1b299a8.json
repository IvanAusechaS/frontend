{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ivana\\\\OneDrive\\\\Documentos\\\\Quinto Semestre\\\\SD1\\\\Proyecto-Final-Desarrollo-de-Software-I\\\\frontend\\\\src\\\\pages\\\\ProfesionalDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getTurnos, updateTurno, getProfesionalStats, logoutUser } from '../services/api';\nimport './ProfesionalDashboard.css';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Registrar componentes de Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst ProfesionalDashboard = ({\n  user: userProp,\n  setUser\n}) => {\n  _s();\n  const [turnos, setTurnos] = useState([]);\n  const [stats, setStats] = useState({\n    pacientes_atendidos: 0,\n    citas_mas_pedidas: [],\n    turnos_por_punto: 0\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const user = userProp || JSON.parse(localStorage.getItem('user')) || {};\n  const handleError = useCallback(err => {\n    var _err$response;\n    if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) {\n      setError('Sesión expirada. Por favor, inicia sesión nuevamente.');\n      localStorage.clear();\n      setUser(null);\n      navigate('/login');\n    } else {\n      var _err$response2, _err$response2$data;\n      setError(`Error: ${((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.detail) || err.message}`);\n    }\n    setLoading(false);\n  }, [navigate, setUser]);\n  const fetchData = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token || !user.es_profesional) {\n        setError('Debes ser un profesional autenticado para acceder.');\n        navigate('/login');\n        return;\n      }\n      const [turnosData, statsData] = await Promise.all([getTurnos(), getProfesionalStats()]);\n      setTurnos(turnosData);\n      setStats(statsData);\n      setLoading(false);\n    } catch (err) {\n      handleError(err);\n    }\n  }, [navigate, setUser, user.es_profesional, handleError]);\n  const handleEstadoChange = async (turnoId, nuevoEstado) => {\n    try {\n      const turno = turnos.find(t => t.id === turnoId);\n      if (!turno) throw new Error('Turno no encontrado');\n      const puntoAtencionId = parseInt(turno.punto_atencion_id_read);\n      if (isNaN(puntoAtencionId)) {\n        throw new Error('punto_atencion_id_read no es un número válido');\n      }\n      const data = {\n        punto_atencion_id: puntoAtencionId,\n        tipo_cita: turno.tipo_cita,\n        estado: nuevoEstado,\n        prioridad: turno.prioridad,\n        descripcion: turno.descripcion || ''\n      };\n      const updatedTurno = await updateTurno(turnoId, data);\n      const updatedTurnos = turnos.map(t => t.id === turnoId ? {\n        ...t,\n        ...updatedTurno\n      } : t);\n      setTurnos(updatedTurnos);\n      fetchData();\n      setError('');\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError(`Error al actualizar el turno: ${((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.detail) || err.message}`);\n    }\n  };\n  const handleLogout = async () => {\n    try {\n      await logoutUser();\n      localStorage.clear();\n      setUser(null);\n      navigate('/login');\n    } catch (err) {\n      setError('Error al cerrar sesión');\n    }\n  };\n  useEffect(() => {\n    fetchData();\n    const interval = setInterval(fetchData, 30000);\n    return () => clearInterval(interval);\n  }, [fetchData]);\n  const formatDateTime = dateString => {\n    const date = new Date(dateString);\n    return `${date.toLocaleDateString('es-CO')} ${date.toLocaleTimeString('es-CO', {\n      hour: '2-digit',\n      minute: '2-digit'\n    })}`;\n  };\n\n  // Datos simulados por hora para la gráfica\n  const hours = Array.from({\n    length: 24\n  }, (_, i) => `${i}:00`);\n  const simulatedData = Array(24).fill(0).map(() => Math.floor(Math.random() * 5));\n  simulatedData[parseInt(new Date().getHours())] = stats.pacientes_atendidos || 0;\n\n  // Configuración de la gráfica\n  const chartData = {\n    labels: hours,\n    datasets: [{\n      label: 'Pacientes Atendidos por Hora',\n      data: simulatedData,\n      backgroundColor: 'rgba(54, 162, 235, 0.6)',\n      borderColor: 'rgba(54, 162, 235, 1)',\n      borderWidth: 1\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Pacientes Atendidos por Hora (Hoy)'\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        ticks: {\n          stepSize: 1\n        }\n      },\n      x: {\n        ticks: {\n          maxRotation: 45,\n          minRotation: 45\n        }\n      }\n    }\n  };\n  const turnoActual = turnos.find(turno => turno.estado === 'En progreso') || turnos.filter(turno => turno.estado === 'En espera').sort((a, b) => {\n    if (a.prioridad === b.prioridad) return a.numero.localeCompare(b.numero);\n    return a.prioridad === 'P' ? -1 : 1;\n  })[0];\n  const turnosEnEspera = turnos.filter(turno => turno.estado === 'En espera').sort((a, b) => {\n    if (a.prioridad === b.prioridad) return a.numero.localeCompare(b.numero);\n    return a.prioridad === 'P' ? -1 : 1;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profesional-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"dashboard-title\",\n        children: \"Dashboard Profesional\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"logout-button\",\n        children: \"Cerrar Sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"dashboard-loading\",\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"dashboard-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }, this), !loading && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card pacientes-atendidos\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Pacientes Atendidos Hoy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"big-number\",\n          children: stats.pacientes_atendidos\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: /*#__PURE__*/_jsxDEV(Bar, {\n            data: chartData,\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card turno-actual\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Turno Actual\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), turnoActual ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"turno-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"N\\xFAmero:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 20\n            }, this), \" \", turnoActual.numero]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Paciente:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 20\n            }, this), \" \", turnoActual.usuario]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Tipo:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 20\n            }, this), \" \", turnoActual.tipo_cita]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Fecha:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 20\n            }, this), \" \", formatDateTime(turnoActual.fecha_cita)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Estado:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 20\n            }, this), \" \", turnoActual.estado]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: turnoActual.estado,\n            onChange: e => handleEstadoChange(turnoActual.id, e.target.value),\n            className: \"estado-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"En espera\",\n              children: \"En espera\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"En progreso\",\n              children: \"En progreso\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Atendido\",\n              children: \"Atendido\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Cancelado\",\n              children: \"Cancelado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No hay turno actual.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card pacientes-atender\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Pacientes a Atender (\", turnosEnEspera.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), turnosEnEspera.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"turno-list\",\n          children: turnosEnEspera.map(turno => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"turno-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [turno.numero, \" (\", turno.prioridad === 'P' ? 'Prioritario' : 'Normal', \") - \", turno.usuario, \" (\", turno.tipo_cita, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEstadoChange(turno.id, 'En progreso'),\n              className: \"action-button\",\n              children: \"Atender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 21\n            }, this)]\n          }, turno.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No hay turnos en espera.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card turnos-por-punto\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Turnos Activos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [stats.turnos_por_punto, \" turnos en \", turnos.length > 0 ? turnos[0].punto_atencion : 'No asignado']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card calendario\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Calendario\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Calendar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card citas-mas-pedidas\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Citas M\\xE1s Pedidas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), stats.citas_mas_pedidas.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: stats.citas_mas_pedidas.map((cita, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [cita.tipo_cita, \": \", cita.total]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No hay datos.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfesionalDashboard, \"FhUzx7cmxHnpgc3FdNYiegQt7uo=\", false, function () {\n  return [useNavigate];\n});\n_c = ProfesionalDashboard;\nexport default ProfesionalDashboard;\nvar _c;\n$RefreshReg$(_c, \"ProfesionalDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","getTurnos","updateTurno","getProfesionalStats","logoutUser","Calendar","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","ProfesionalDashboard","user","userProp","setUser","_s","turnos","setTurnos","stats","setStats","pacientes_atendidos","citas_mas_pedidas","turnos_por_punto","loading","setLoading","error","setError","navigate","JSON","parse","localStorage","getItem","handleError","err","_err$response","response","status","clear","_err$response2","_err$response2$data","data","detail","message","fetchData","token","es_profesional","turnosData","statsData","Promise","all","handleEstadoChange","turnoId","nuevoEstado","turno","find","t","id","Error","puntoAtencionId","parseInt","punto_atencion_id_read","isNaN","punto_atencion_id","tipo_cita","estado","prioridad","descripcion","updatedTurno","updatedTurnos","map","_err$response3","_err$response3$data","handleLogout","interval","setInterval","clearInterval","formatDateTime","dateString","date","Date","toLocaleDateString","toLocaleTimeString","hour","minute","hours","Array","from","length","_","i","simulatedData","fill","Math","floor","random","getHours","chartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","chartOptions","responsive","maintainAspectRatio","plugins","legend","position","title","display","text","tooltip","mode","intersect","scales","y","beginAtZero","ticks","stepSize","x","maxRotation","minRotation","turnoActual","filter","sort","a","b","numero","localeCompare","turnosEnEspera","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","options","usuario","fecha_cita","value","onChange","e","target","punto_atencion","cita","index","total","_c","$RefreshReg$"],"sources":["C:/Users/ivana/OneDrive/Documentos/Quinto Semestre/SD1/Proyecto-Final-Desarrollo-de-Software-I/frontend/src/pages/ProfesionalDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getTurnos, updateTurno, getProfesionalStats, logoutUser } from '../services/api';\r\nimport './ProfesionalDashboard.css';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\n// Registrar componentes de Chart.js\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst ProfesionalDashboard = ({ user: userProp, setUser }) => {\r\n  const [turnos, setTurnos] = useState([]);\r\n  const [stats, setStats] = useState({ pacientes_atendidos: 0, citas_mas_pedidas: [], turnos_por_punto: 0 });\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n  const user = userProp || JSON.parse(localStorage.getItem('user')) || {};\r\n\r\n  const handleError = useCallback((err) => {\r\n    if (err.response?.status === 401) {\r\n      setError('Sesión expirada. Por favor, inicia sesión nuevamente.');\r\n      localStorage.clear();\r\n      setUser(null);\r\n      navigate('/login');\r\n    } else {\r\n      setError(`Error: ${err.response?.data?.detail || err.message}`);\r\n    }\r\n    setLoading(false);\r\n  }, [navigate, setUser]);\r\n\r\n  const fetchData = useCallback(async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token || !user.es_profesional) {\r\n        setError('Debes ser un profesional autenticado para acceder.');\r\n        navigate('/login');\r\n        return;\r\n      }\r\n      const [turnosData, statsData] = await Promise.all([\r\n        getTurnos(),\r\n        getProfesionalStats()\r\n      ]);\r\n      setTurnos(turnosData);\r\n      setStats(statsData);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      handleError(err);\r\n    }\r\n  }, [navigate, setUser, user.es_profesional, handleError]);\r\n\r\n  const handleEstadoChange = async (turnoId, nuevoEstado) => {\r\n    try {\r\n      const turno = turnos.find(t => t.id === turnoId);\r\n      if (!turno) throw new Error('Turno no encontrado');\r\n\r\n      const puntoAtencionId = parseInt(turno.punto_atencion_id_read);\r\n      if (isNaN(puntoAtencionId)) {\r\n        throw new Error('punto_atencion_id_read no es un número válido');\r\n      }\r\n\r\n      const data = {\r\n        punto_atencion_id: puntoAtencionId,\r\n        tipo_cita: turno.tipo_cita,\r\n        estado: nuevoEstado,\r\n        prioridad: turno.prioridad,\r\n        descripcion: turno.descripcion || ''\r\n      };\r\n\r\n      const updatedTurno = await updateTurno(turnoId, data);\r\n      const updatedTurnos = turnos.map(t =>\r\n        t.id === turnoId ? { ...t, ...updatedTurno } : t\r\n      );\r\n      setTurnos(updatedTurnos);\r\n      fetchData();\r\n      setError('');\r\n    } catch (err) {\r\n      setError(`Error al actualizar el turno: ${err.response?.data?.detail || err.message}`);\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await logoutUser();\r\n      localStorage.clear();\r\n      setUser(null);\r\n      navigate('/login');\r\n    } catch (err) {\r\n      setError('Error al cerrar sesión');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const interval = setInterval(fetchData, 30000);\r\n    return () => clearInterval(interval);\r\n  }, [fetchData]);\r\n\r\n  const formatDateTime = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return `${date.toLocaleDateString('es-CO')} ${date.toLocaleTimeString('es-CO', { hour: '2-digit', minute: '2-digit' })}`;\r\n  };\r\n\r\n  // Datos simulados por hora para la gráfica\r\n  const hours = Array.from({ length: 24 }, (_, i) => `${i}:00`);\r\n  const simulatedData = Array(24).fill(0).map(() => Math.floor(Math.random() * 5));\r\n  simulatedData[parseInt(new Date().getHours())] = stats.pacientes_atendidos || 0;\r\n\r\n  // Configuración de la gráfica\r\n  const chartData = {\r\n    labels: hours,\r\n    datasets: [\r\n      {\r\n        label: 'Pacientes Atendidos por Hora',\r\n        data: simulatedData,\r\n        backgroundColor: 'rgba(54, 162, 235, 0.6)',\r\n        borderColor: 'rgba(54, 162, 235, 1)',\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: { position: 'top' },\r\n      title: { display: true, text: 'Pacientes Atendidos por Hora (Hoy)' },\r\n      tooltip: { mode: 'index', intersect: false },\r\n    },\r\n    scales: {\r\n      y: { beginAtZero: true, ticks: { stepSize: 1 } },\r\n      x: { ticks: { maxRotation: 45, minRotation: 45 } },\r\n    },\r\n  };\r\n\r\n  const turnoActual = turnos.find(turno => turno.estado === 'En progreso') ||\r\n                     turnos.filter(turno => turno.estado === 'En espera')\r\n                          .sort((a, b) => {\r\n                            if (a.prioridad === b.prioridad) return a.numero.localeCompare(b.numero);\r\n                            return a.prioridad === 'P' ? -1 : 1;\r\n                          })[0];\r\n  const turnosEnEspera = turnos.filter(turno => turno.estado === 'En espera')\r\n                               .sort((a, b) => {\r\n                                 if (a.prioridad === b.prioridad) return a.numero.localeCompare(b.numero);\r\n                                 return a.prioridad === 'P' ? -1 : 1;\r\n                               });\r\n\r\n  return (\r\n    <div className=\"profesional-dashboard\">\r\n      <div className=\"dashboard-header\">\r\n        <h2 className=\"dashboard-title\">Dashboard Profesional</h2>\r\n        <button onClick={handleLogout} className=\"logout-button\">Cerrar Sesión</button>\r\n      </div>\r\n      {loading && <p className=\"dashboard-loading\">Cargando...</p>}\r\n      {error && <p className=\"dashboard-error\">{error}</p>}\r\n      {!loading && !error && (\r\n        <div className=\"dashboard-grid\">\r\n          {/* Fila 1 */}\r\n          <div className=\"dashboard-card pacientes-atendidos\">\r\n            <h3>Pacientes Atendidos Hoy</h3>\r\n            <p className=\"big-number\">{stats.pacientes_atendidos}</p>\r\n            <div className=\"chart-container\">\r\n              <Bar data={chartData} options={chartOptions} />\r\n            </div>\r\n          </div>\r\n          <div className=\"dashboard-card turno-actual\">\r\n            <h3>Turno Actual</h3>\r\n            {turnoActual ? (\r\n              <div className=\"turno-details\">\r\n                <p><strong>Número:</strong> {turnoActual.numero}</p>\r\n                <p><strong>Paciente:</strong> {turnoActual.usuario}</p>\r\n                <p><strong>Tipo:</strong> {turnoActual.tipo_cita}</p>\r\n                <p><strong>Fecha:</strong> {formatDateTime(turnoActual.fecha_cita)}</p>\r\n                <p><strong>Estado:</strong> {turnoActual.estado}</p>\r\n                <select\r\n                  value={turnoActual.estado}\r\n                  onChange={(e) => handleEstadoChange(turnoActual.id, e.target.value)}\r\n                  className=\"estado-select\"\r\n                >\r\n                  <option value=\"En espera\">En espera</option>\r\n                  <option value=\"En progreso\">En progreso</option>\r\n                  <option value=\"Atendido\">Atendido</option>\r\n                  <option value=\"Cancelado\">Cancelado</option>\r\n                </select>\r\n              </div>\r\n            ) : (\r\n              <p>No hay turno actual.</p>\r\n            )}\r\n          </div>\r\n\r\n          {/* Fila 2 */}\r\n          <div className=\"dashboard-card pacientes-atender\">\r\n            <h3>Pacientes a Atender ({turnosEnEspera.length})</h3>\r\n            {turnosEnEspera.length > 0 ? (\r\n              <ul className=\"turno-list\">\r\n                {turnosEnEspera.map(turno => (\r\n                  <li key={turno.id} className=\"turno-item\">\r\n                    <span>{turno.numero} ({turno.prioridad === 'P' ? 'Prioritario' : 'Normal'}) - {turno.usuario} ({turno.tipo_cita})</span>\r\n                    <button onClick={() => handleEstadoChange(turno.id, 'En progreso')} className=\"action-button\">\r\n                      Atender\r\n                    </button>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            ) : (\r\n              <p>No hay turnos en espera.</p>\r\n            )}\r\n          </div>\r\n          <div className=\"dashboard-card turnos-por-punto\">\r\n            <h3>Turnos Activos</h3>\r\n            <p>{stats.turnos_por_punto} turnos en {turnos.length > 0 ? turnos[0].punto_atencion : 'No asignado'}</p>\r\n          </div>\r\n\r\n          {/* Fila 3 */}\r\n          <div className=\"dashboard-card calendario\">\r\n            <h3>Calendario</h3>\r\n            <Calendar />\r\n          </div>\r\n          <div className=\"dashboard-card citas-mas-pedidas\">\r\n            <h3>Citas Más Pedidas</h3>\r\n            {stats.citas_mas_pedidas.length > 0 ? (\r\n              <ul>\r\n                {stats.citas_mas_pedidas.map((cita, index) => (\r\n                  <li key={index}>{cita.tipo_cita}: {cita.total}</li>\r\n                ))}\r\n              </ul>\r\n            ) : (\r\n              <p>No hay datos.</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfesionalDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}