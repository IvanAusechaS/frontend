{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ivana\\\\OneDrive\\\\Documentos\\\\Quinto Semestre\\\\SD1\\\\Proyecto-Final-Desarrollo-de-Software-I\\\\frontend\\\\src\\\\pages\\\\ProfesionalDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getTurnos, updateTurno, getProfesionalStats, logoutUser } from '../services/api';\nimport './ProfesionalDashboard.css';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Registrar componentes de Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst ProfesionalDashboard = ({\n  user: userProp,\n  setUser\n}) => {\n  _s();\n  const [turnos, setTurnos] = useState([]);\n  const [stats, setStats] = useState({\n    pacientes_atendidos: 0,\n    citas_mas_pedidas: [],\n    turnos_por_punto: 0\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const user = userProp || JSON.parse(localStorage.getItem('user')) || {};\n  const handleError = useCallback(err => {\n    var _err$response;\n    if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) {\n      setError('Sesión expirada. Por favor, inicia sesión nuevamente.');\n      localStorage.clear();\n      setUser(null);\n      navigate('/login');\n    } else {\n      var _err$response2, _err$response2$data;\n      setError(`Error: ${((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.detail) || err.message}`);\n    }\n    setLoading(false);\n  }, [navigate, setUser]);\n  const fetchData = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token || !user.es_profesional) {\n        setError('Debes ser un profesional autenticado para acceder.');\n        navigate('/login');\n        return;\n      }\n      const [turnosData, statsData] = await Promise.all([getTurnos(), getProfesionalStats()]);\n      setTurnos(turnosData);\n      setStats(statsData);\n      setLoading(false);\n    } catch (err) {\n      handleError(err);\n    }\n  }, [navigate, setUser, user.es_profesional, handleError]);\n  const handleEstadoChange = async (turnoId, nuevoEstado) => {\n    try {\n      const turno = turnos.find(t => t.id === turnoId);\n      if (!turno) throw new Error('Turno no encontrado');\n      const puntoAtencionId = parseInt(turno.punto_atencion_id_read);\n      if (isNaN(puntoAtencionId)) {\n        throw new Error('punto_atencion_id_read no es un número válido');\n      }\n      const data = {\n        punto_atencion_id: puntoAtencionId,\n        tipo_cita: turno.tipo_cita,\n        estado: nuevoEstado,\n        prioridad: turno.prioridad,\n        descripcion: turno.descripcion || ''\n      };\n      const updatedTurno = await updateTurno(turnoId, data);\n      const updatedTurnos = turnos.map(t => t.id === turnoId ? {\n        ...t,\n        ...updatedTurno\n      } : t);\n      setTurnos(updatedTurnos);\n      fetchData();\n      setError('');\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError(`Error al actualizar el turno: ${((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.detail) || err.message}`);\n    }\n  };\n  const handleLogout = async () => {\n    try {\n      await logoutUser();\n      localStorage.clear();\n      setUser(null);\n      navigate('/login');\n    } catch (err) {\n      setError('Error al cerrar sesión');\n    }\n  };\n  useEffect(() => {\n    fetchData();\n    const interval = setInterval(fetchData, 30000);\n    return () => clearInterval(interval);\n  }, [fetchData]);\n  const formatDateTime = dateString => {\n    const date = new Date(dateString);\n    return `${date.toLocaleDateString('es-CO')} ${date.toLocaleTimeString('es-CO', {\n      hour: '2-digit',\n      minute: '2-digit'\n    })}`;\n  };\n\n  // Datos simulados por hora para la gráfica\n  const hours = Array.from({\n    length: 24\n  }, (_, i) => `${i}:00`);\n  const simulatedData = Array(24).fill(0).map(() => Math.floor(Math.random() * 5));\n  simulatedData[parseInt(new Date().getHours())] = stats.pacientes_atendidos || 0;\n\n  // Configuración de la gráfica\n  const chartData = {\n    labels: hours,\n    datasets: [{\n      label: 'Pacientes Atendidos por Hora',\n      data: simulatedData,\n      backgroundColor: '#3498db',\n      borderColor: '#2980b9',\n      borderWidth: 1\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Pacientes Atendidos por Hora (Hoy)',\n        color: '#2c3e50'\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        ticks: {\n          stepSize: 1,\n          color: '#2c3e50'\n        }\n      },\n      x: {\n        ticks: {\n          maxRotation: 45,\n          minRotation: 45,\n          color: '#2c3e50'\n        }\n      }\n    }\n  };\n  const turnoActual = turnos.find(turno => turno.estado === 'En progreso') || turnos.filter(turno => turno.estado === 'En espera').sort((a, b) => {\n    if (a.prioridad === b.prioridad) return a.numero.localeCompare(b.numero);\n    return a.prioridad === 'P' ? -1 : 1;\n  })[0];\n  const turnosEnEspera = turnos.filter(turno => turno.estado === 'En espera').sort((a, b) => {\n    if (a.prioridad === b.prioridad) return a.numero.localeCompare(b.numero);\n    return a.prioridad === 'P' ? -1 : 1;\n  });\n\n  // Datos simulados para el calendario (eventos)\n  const tileContent = ({\n    date,\n    view\n  }) => {\n    if (view === 'month') {\n      const today = new Date();\n      if (date.toDateString() === today.toDateString()) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-event\",\n          style: {\n            backgroundColor: '#e74c3c'\n          },\n          children: \"Hoy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 16\n        }, this);\n      }\n      if (date.getDate() === 5) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-event\",\n          style: {\n            backgroundColor: '#3498db'\n          },\n          children: \"Cita\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 16\n        }, this);\n      }\n    }\n    return null;\n  };\n\n  // Información del profesional (simulada desde user)\n  const profesionalInfo = {\n    nombre: user.nombre || 'María López',\n    especialidad: user.especialidad || 'Médico General',\n    email: user.email || 'maria.lopez@example.com'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profesional-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"dashboard-title\",\n        children: \"Dashboard Profesional\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"logout-button\",\n        children: \"Cerrar Sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"dashboard-loading\",\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"dashboard-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }, this), !loading && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card pacientes-atendidos\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Pacientes Atendidos Hoy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"big-number\",\n          children: stats.pacientes_atendidos\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: /*#__PURE__*/_jsxDEV(Bar, {\n            data: chartData,\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card turno-actual\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Turno Actual\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), turnoActual ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"turno-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"N\\xFAmero:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 20\n            }, this), \" \", turnoActual.numero]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Paciente:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 20\n            }, this), \" \", turnoActual.usuario]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Tipo:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 20\n            }, this), \" \", turnoActual.tipo_cita]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Fecha:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 20\n            }, this), \" \", formatDateTime(turnoActual.fecha_cita)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Estado:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 20\n            }, this), \" \", turnoActual.estado]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: turnoActual.estado,\n            onChange: e => handleEstadoChange(turnoActual.id, e.target.value),\n            className: \"estado-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"En espera\",\n              children: \"En espera\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"En progreso\",\n              children: \"En progreso\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Atendido\",\n              children: \"Atendido\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Cancelado\",\n              children: \"Cancelado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No hay turno actual.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card pacientes-atender\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Pacientes a Atender (\", turnosEnEspera.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), turnosEnEspera.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"turno-list\",\n          children: turnosEnEspera.map(turno => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"turno-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [turno.numero, \" (\", turno.prioridad === 'P' ? 'Prioritario' : 'Normal', \") - \", turno.usuario, \" (\", turno.tipo_cita, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEstadoChange(turno.id, 'En progreso'),\n              className: \"action-button\",\n              children: \"Atender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 21\n            }, this)]\n          }, turno.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No hay turnos en espera.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card perfil-profesional\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Perfil del Profesional\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Nombre:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 16\n          }, this), \" \", profesionalInfo.nombre]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Especialidad:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 16\n          }, this), \" \", profesionalInfo.especialidad]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 16\n          }, this), \" \", profesionalInfo.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card turnos-por-punto\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Turnos Activos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [stats.turnos_por_punto, \" turnos en \", turnos.length > 0 ? turnos[0].punto_atencion : 'No asignado']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card calendario\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Calendario\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n          tileContent: tileContent,\n          className: \"custom-calendar\",\n          view: \"month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card citas-mas-pedidas\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Citas M\\xE1s Pedidas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this), stats.citas_mas_pedidas.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: stats.citas_mas_pedidas.map((cita, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [cita.tipo_cita, \": \", cita.total]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No hay datos.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfesionalDashboard, \"FhUzx7cmxHnpgc3FdNYiegQt7uo=\", false, function () {\n  return [useNavigate];\n});\n_c = ProfesionalDashboard;\nexport default ProfesionalDashboard;\nvar _c;\n$RefreshReg$(_c, \"ProfesionalDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","getTurnos","updateTurno","getProfesionalStats","logoutUser","Calendar","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","ProfesionalDashboard","user","userProp","setUser","_s","turnos","setTurnos","stats","setStats","pacientes_atendidos","citas_mas_pedidas","turnos_por_punto","loading","setLoading","error","setError","navigate","JSON","parse","localStorage","getItem","handleError","err","_err$response","response","status","clear","_err$response2","_err$response2$data","data","detail","message","fetchData","token","es_profesional","turnosData","statsData","Promise","all","handleEstadoChange","turnoId","nuevoEstado","turno","find","t","id","Error","puntoAtencionId","parseInt","punto_atencion_id_read","isNaN","punto_atencion_id","tipo_cita","estado","prioridad","descripcion","updatedTurno","updatedTurnos","map","_err$response3","_err$response3$data","handleLogout","interval","setInterval","clearInterval","formatDateTime","dateString","date","Date","toLocaleDateString","toLocaleTimeString","hour","minute","hours","Array","from","length","_","i","simulatedData","fill","Math","floor","random","getHours","chartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","chartOptions","responsive","maintainAspectRatio","plugins","legend","position","title","display","text","color","tooltip","mode","intersect","scales","y","beginAtZero","ticks","stepSize","x","maxRotation","minRotation","turnoActual","filter","sort","a","b","numero","localeCompare","turnosEnEspera","tileContent","view","today","toDateString","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","getDate","profesionalInfo","nombre","especialidad","email","onClick","options","usuario","fecha_cita","value","onChange","e","target","punto_atencion","cita","index","total","_c","$RefreshReg$"],"sources":["C:/Users/ivana/OneDrive/Documentos/Quinto Semestre/SD1/Proyecto-Final-Desarrollo-de-Software-I/frontend/src/pages/ProfesionalDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getTurnos, updateTurno, getProfesionalStats, logoutUser } from '../services/api';\r\nimport './ProfesionalDashboard.css';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\n// Registrar componentes de Chart.js\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst ProfesionalDashboard = ({ user: userProp, setUser }) => {\r\n  const [turnos, setTurnos] = useState([]);\r\n  const [stats, setStats] = useState({ pacientes_atendidos: 0, citas_mas_pedidas: [], turnos_por_punto: 0 });\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n  const user = userProp || JSON.parse(localStorage.getItem('user')) || {};\r\n\r\n  const handleError = useCallback((err) => {\r\n    if (err.response?.status === 401) {\r\n      setError('Sesión expirada. Por favor, inicia sesión nuevamente.');\r\n      localStorage.clear();\r\n      setUser(null);\r\n      navigate('/login');\r\n    } else {\r\n      setError(`Error: ${err.response?.data?.detail || err.message}`);\r\n    }\r\n    setLoading(false);\r\n  }, [navigate, setUser]);\r\n\r\n  const fetchData = useCallback(async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token || !user.es_profesional) {\r\n        setError('Debes ser un profesional autenticado para acceder.');\r\n        navigate('/login');\r\n        return;\r\n      }\r\n      const [turnosData, statsData] = await Promise.all([\r\n        getTurnos(),\r\n        getProfesionalStats()\r\n      ]);\r\n      setTurnos(turnosData);\r\n      setStats(statsData);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      handleError(err);\r\n    }\r\n  }, [navigate, setUser, user.es_profesional, handleError]);\r\n\r\n  const handleEstadoChange = async (turnoId, nuevoEstado) => {\r\n    try {\r\n      const turno = turnos.find(t => t.id === turnoId);\r\n      if (!turno) throw new Error('Turno no encontrado');\r\n\r\n      const puntoAtencionId = parseInt(turno.punto_atencion_id_read);\r\n      if (isNaN(puntoAtencionId)) {\r\n        throw new Error('punto_atencion_id_read no es un número válido');\r\n      }\r\n\r\n      const data = {\r\n        punto_atencion_id: puntoAtencionId,\r\n        tipo_cita: turno.tipo_cita,\r\n        estado: nuevoEstado,\r\n        prioridad: turno.prioridad,\r\n        descripcion: turno.descripcion || ''\r\n      };\r\n\r\n      const updatedTurno = await updateTurno(turnoId, data);\r\n      const updatedTurnos = turnos.map(t =>\r\n        t.id === turnoId ? { ...t, ...updatedTurno } : t\r\n      );\r\n      setTurnos(updatedTurnos);\r\n      fetchData();\r\n      setError('');\r\n    } catch (err) {\r\n      setError(`Error al actualizar el turno: ${err.response?.data?.detail || err.message}`);\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await logoutUser();\r\n      localStorage.clear();\r\n      setUser(null);\r\n      navigate('/login');\r\n    } catch (err) {\r\n      setError('Error al cerrar sesión');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const interval = setInterval(fetchData, 30000);\r\n    return () => clearInterval(interval);\r\n  }, [fetchData]);\r\n\r\n  const formatDateTime = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return `${date.toLocaleDateString('es-CO')} ${date.toLocaleTimeString('es-CO', { hour: '2-digit', minute: '2-digit' })}`;\r\n  };\r\n\r\n  // Datos simulados por hora para la gráfica\r\n  const hours = Array.from({ length: 24 }, (_, i) => `${i}:00`);\r\n  const simulatedData = Array(24).fill(0).map(() => Math.floor(Math.random() * 5));\r\n  simulatedData[parseInt(new Date().getHours())] = stats.pacientes_atendidos || 0;\r\n\r\n  // Configuración de la gráfica\r\n  const chartData = {\r\n    labels: hours,\r\n    datasets: [\r\n      {\r\n        label: 'Pacientes Atendidos por Hora',\r\n        data: simulatedData,\r\n        backgroundColor: '#3498db',\r\n        borderColor: '#2980b9',\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: { position: 'top' },\r\n      title: { display: true, text: 'Pacientes Atendidos por Hora (Hoy)', color: '#2c3e50' },\r\n      tooltip: { mode: 'index', intersect: false },\r\n    },\r\n    scales: {\r\n      y: { beginAtZero: true, ticks: { stepSize: 1, color: '#2c3e50' } },\r\n      x: { ticks: { maxRotation: 45, minRotation: 45, color: '#2c3e50' } },\r\n    },\r\n  };\r\n\r\n  const turnoActual = turnos.find(turno => turno.estado === 'En progreso') ||\r\n                     turnos.filter(turno => turno.estado === 'En espera')\r\n                          .sort((a, b) => {\r\n                            if (a.prioridad === b.prioridad) return a.numero.localeCompare(b.numero);\r\n                            return a.prioridad === 'P' ? -1 : 1;\r\n                          })[0];\r\n  const turnosEnEspera = turnos.filter(turno => turno.estado === 'En espera')\r\n                               .sort((a, b) => {\r\n                                 if (a.prioridad === b.prioridad) return a.numero.localeCompare(b.numero);\r\n                                 return a.prioridad === 'P' ? -1 : 1;\r\n                               });\r\n\r\n  // Datos simulados para el calendario (eventos)\r\n  const tileContent = ({ date, view }) => {\r\n    if (view === 'month') {\r\n      const today = new Date();\r\n      if (date.toDateString() === today.toDateString()) {\r\n        return <div className=\"calendar-event\" style={{ backgroundColor: '#e74c3c' }}>Hoy</div>;\r\n      }\r\n      if (date.getDate() === 5) {\r\n        return <div className=\"calendar-event\" style={{ backgroundColor: '#3498db' }}>Cita</div>;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // Información del profesional (simulada desde user)\r\n  const profesionalInfo = {\r\n    nombre: user.nombre || 'María López',\r\n    especialidad: user.especialidad || 'Médico General',\r\n    email: user.email || 'maria.lopez@example.com',\r\n  };\r\n\r\n  return (\r\n    <div className=\"profesional-dashboard\">\r\n      <div className=\"dashboard-header\">\r\n        <h2 className=\"dashboard-title\">Dashboard Profesional</h2>\r\n        <button onClick={handleLogout} className=\"logout-button\">Cerrar Sesión</button>\r\n      </div>\r\n      {loading && <p className=\"dashboard-loading\">Cargando...</p>}\r\n      {error && <p className=\"dashboard-error\">{error}</p>}\r\n      {!loading && !error && (\r\n        <div className=\"dashboard-grid\">\r\n          {/* Fila 1 */}\r\n          <div className=\"dashboard-card pacientes-atendidos\">\r\n            <h3>Pacientes Atendidos Hoy</h3>\r\n            <p className=\"big-number\">{stats.pacientes_atendidos}</p>\r\n            <div className=\"chart-container\">\r\n              <Bar data={chartData} options={chartOptions} />\r\n            </div>\r\n          </div>\r\n          <div className=\"dashboard-card turno-actual\">\r\n            <h3>Turno Actual</h3>\r\n            {turnoActual ? (\r\n              <div className=\"turno-details\">\r\n                <p><strong>Número:</strong> {turnoActual.numero}</p>\r\n                <p><strong>Paciente:</strong> {turnoActual.usuario}</p>\r\n                <p><strong>Tipo:</strong> {turnoActual.tipo_cita}</p>\r\n                <p><strong>Fecha:</strong> {formatDateTime(turnoActual.fecha_cita)}</p>\r\n                <p><strong>Estado:</strong> {turnoActual.estado}</p>\r\n                <select\r\n                  value={turnoActual.estado}\r\n                  onChange={(e) => handleEstadoChange(turnoActual.id, e.target.value)}\r\n                  className=\"estado-select\"\r\n                >\r\n                  <option value=\"En espera\">En espera</option>\r\n                  <option value=\"En progreso\">En progreso</option>\r\n                  <option value=\"Atendido\">Atendido</option>\r\n                  <option value=\"Cancelado\">Cancelado</option>\r\n                </select>\r\n              </div>\r\n            ) : (\r\n              <p>No hay turno actual.</p>\r\n            )}\r\n          </div>\r\n\r\n          {/* Fila 2 */}\r\n          <div className=\"dashboard-card pacientes-atender\">\r\n            <h3>Pacientes a Atender ({turnosEnEspera.length})</h3>\r\n            {turnosEnEspera.length > 0 ? (\r\n              <ul className=\"turno-list\">\r\n                {turnosEnEspera.map(turno => (\r\n                  <li key={turno.id} className=\"turno-item\">\r\n                    <span>{turno.numero} ({turno.prioridad === 'P' ? 'Prioritario' : 'Normal'}) - {turno.usuario} ({turno.tipo_cita})</span>\r\n                    <button onClick={() => handleEstadoChange(turno.id, 'En progreso')} className=\"action-button\">\r\n                      Atender\r\n                    </button>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            ) : (\r\n              <p>No hay turnos en espera.</p>\r\n            )}\r\n          </div>\r\n          <div className=\"dashboard-card perfil-profesional\">\r\n            <h3>Perfil del Profesional</h3>\r\n            <p><strong>Nombre:</strong> {profesionalInfo.nombre}</p>\r\n            <p><strong>Especialidad:</strong> {profesionalInfo.especialidad}</p>\r\n            <p><strong>Email:</strong> {profesionalInfo.email}</p>\r\n          </div>\r\n          <div className=\"dashboard-card turnos-por-punto\">\r\n            <h3>Turnos Activos</h3>\r\n            <p>{stats.turnos_por_punto} turnos en {turnos.length > 0 ? turnos[0].punto_atencion : 'No asignado'}</p>\r\n          </div>\r\n\r\n          {/* Fila 3 */}\r\n          <div className=\"dashboard-card calendario\">\r\n            <h3>Calendario</h3>\r\n            <Calendar\r\n              tileContent={tileContent}\r\n              className=\"custom-calendar\"\r\n              view=\"month\"\r\n            />\r\n          </div>\r\n          <div className=\"dashboard-card citas-mas-pedidas\">\r\n            <h3>Citas Más Pedidas</h3>\r\n            {stats.citas_mas_pedidas.length > 0 ? (\r\n              <ul>\r\n                {stats.citas_mas_pedidas.map((cita, index) => (\r\n                  <li key={index}>{cita.tipo_cita}: {cita.total}</li>\r\n                ))}\r\n              </ul>\r\n            ) : (\r\n              <p>No hay datos.</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfesionalDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}